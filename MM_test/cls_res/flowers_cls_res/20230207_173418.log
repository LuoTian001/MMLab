2023-02-07 17:34:21,138 - mmcls - INFO - Environment info:
------------------------------------------------------------
sys.platform: win32
Python: 3.9.16 (main, Jan 11 2023, 16:16:36) [MSC v.1916 64 bit (AMD64)]
CUDA available: True
GPU 0: NVIDIA GeForce RTX 3050 Laptop GPU
CUDA_HOME: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.7
NVCC: Cuda compilation tools, release 11.7, V11.7.64
MSVC: 用于 x64 的 Microsoft (R) C/C++ 优化编译器 19.33.31630 版
GCC: n/a
PyTorch: 1.13.1
PyTorch compiling details: PyTorch built with:
  - C++ Version: 199711
  - MSVC 192829337
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 2019
  - LAPACK is enabled (usually provided by MKL)
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.5.4
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=C:/cb/pytorch_1000000000000/work/tmp_bin/sccache-cl.exe, CXX_FLAGS=/DWIN32 /D_WINDOWS /GR /EHsc /w /bigobj -DUSE_PTHREADPOOL -openmp:experimental -IC:/cb/pytorch_1000000000000/work/mkl/include -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOCUPTI -DUSE_FBGEMM -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=OFF, USE_NNPACK=OFF, USE_OPENMP=ON, USE_ROCM=OFF, 

TorchVision: 0.14.1
OpenCV: 4.6.0
MMCV: 1.7.0
MMCV Compiler: MSVC 192829924
MMCV CUDA Compiler: 11.7
MMClassification: 0.25.0+3d4f80d
------------------------------------------------------------

2023-02-07 17:34:21,139 - mmcls - INFO - Distributed training: False
2023-02-07 17:34:21,691 - mmcls - INFO - Config:
model = dict(
    type='ImageClassifier',
    backbone=dict(
        type='ResNet',
        depth=18,
        num_stages=4,
        out_indices=(3, ),
        style='pytorch',
        init_cfg=dict(
            type='Pretrained',
            checkpoint=
            'C:/Users/crz/mmclassification/checkpoints/resnet18_batch256_imagenet_20200708-34ab8f90.pth',
            prefix='backbone'),
        frozen_stages=2),
    neck=dict(type='GlobalAveragePooling'),
    head=dict(
        type='LinearClsHead',
        num_classes=5,
        in_channels=512,
        loss=dict(type='CrossEntropyLoss', loss_weight=1.0),
        topk=(1, 5)))
dataset_type = 'flower_dataset'
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='RandomResizedCrop', size=224),
    dict(type='RandomFlip', flip_prob=0.5, direction='horizontal'),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='ImageToTensor', keys=['img']),
    dict(type='ToTensor', keys=['gt_label']),
    dict(type='Collect', keys=['img', 'gt_label'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='Resize', size=(256, -1)),
    dict(type='CenterCrop', crop_size=224),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='ImageToTensor', keys=['img']),
    dict(type='Collect', keys=['img'])
]
data_root = 'C:/Users/crz/mmclassification/data/flower_dataset'
data = dict(
    samples_per_gpu=32,
    workers_per_gpu=2,
    train=dict(
        type='flower_dataset',
        data_prefix='C:/Users/crz/mmclassification/data/flower_dataset/train',
        ann_file='C:/Users/crz/mmclassification/data/flower_dataset/train.txt',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='RandomResizedCrop', size=224),
            dict(type='RandomFlip', flip_prob=0.5, direction='horizontal'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='ToTensor', keys=['gt_label']),
            dict(type='Collect', keys=['img', 'gt_label'])
        ]),
    val=dict(
        type='flower_dataset',
        data_prefix='C:/Users/crz/mmclassification/data/flower_dataset/val',
        ann_file='C:/Users/crz/mmclassification/data/flower_dataset/val.txt',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='Resize', size=(256, -1)),
            dict(type='CenterCrop', crop_size=224),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ]))
evaluation = dict(interval=1, metric='accuracy')
optimizer = dict(type='SGD', lr=0.1, momentum=0.9, weight_decay=0.0001)
optimizer_config = dict(grad_clip=None)
lr_config = dict(policy='step', step=[30, 60, 90])
runner = dict(type='EpochBasedRunner', max_epochs=100)
checkpoint_config = dict(interval=1)
log_config = dict(interval=25, hooks=[dict(type='TextLoggerHook')])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = None
resume_from = None
workflow = [('train', 1)]
work_dir = 'train_result/flowers'
gpu_ids = [0]

2023-02-07 17:34:21,696 - mmcls - INFO - Set random seed to 10705918, deterministic: False
2023-02-07 17:34:21,760 - mmcls - INFO - initialize ResNet with init_cfg {'type': 'Pretrained', 'checkpoint': 'C:/Users/crz/mmclassification/checkpoints/resnet18_batch256_imagenet_20200708-34ab8f90.pth', 'prefix': 'backbone'}
2023-02-07 17:34:21,803 - mmcls - INFO - initialize LinearClsHead with init_cfg {'type': 'Normal', 'layer': 'Linear', 'std': 0.01}
Name of parameter - Initialization information

backbone.conv1.weight - torch.Size([64, 3, 7, 7]): 
PretrainedInit: load from C:/Users/crz/mmclassification/checkpoints/resnet18_batch256_imagenet_20200708-34ab8f90.pth 

backbone.bn1.weight - torch.Size([64]): 
PretrainedInit: load from C:/Users/crz/mmclassification/checkpoints/resnet18_batch256_imagenet_20200708-34ab8f90.pth 

backbone.bn1.bias - torch.Size([64]): 
PretrainedInit: load from C:/Users/crz/mmclassification/checkpoints/resnet18_batch256_imagenet_20200708-34ab8f90.pth 

backbone.layer1.0.conv1.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from C:/Users/crz/mmclassification/checkpoints/resnet18_batch256_imagenet_20200708-34ab8f90.pth 

backbone.layer1.0.bn1.weight - torch.Size([64]): 
PretrainedInit: load from C:/Users/crz/mmclassification/checkpoints/resnet18_batch256_imagenet_20200708-34ab8f90.pth 

backbone.layer1.0.bn1.bias - torch.Size([64]): 
PretrainedInit: load from C:/Users/crz/mmclassification/checkpoints/resnet18_batch256_imagenet_20200708-34ab8f90.pth 

backbone.layer1.0.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from C:/Users/crz/mmclassification/checkpoints/resnet18_batch256_imagenet_20200708-34ab8f90.pth 

backbone.layer1.0.bn2.weight - torch.Size([64]): 
PretrainedInit: load from C:/Users/crz/mmclassification/checkpoints/resnet18_batch256_imagenet_20200708-34ab8f90.pth 

backbone.layer1.0.bn2.bias - torch.Size([64]): 
PretrainedInit: load from C:/Users/crz/mmclassification/checkpoints/resnet18_batch256_imagenet_20200708-34ab8f90.pth 

backbone.layer1.1.conv1.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from C:/Users/crz/mmclassification/checkpoints/resnet18_batch256_imagenet_20200708-34ab8f90.pth 

backbone.layer1.1.bn1.weight - torch.Size([64]): 
PretrainedInit: load from C:/Users/crz/mmclassification/checkpoints/resnet18_batch256_imagenet_20200708-34ab8f90.pth 

backbone.layer1.1.bn1.bias - torch.Size([64]): 
PretrainedInit: load from C:/Users/crz/mmclassification/checkpoints/resnet18_batch256_imagenet_20200708-34ab8f90.pth 

backbone.layer1.1.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from C:/Users/crz/mmclassification/checkpoints/resnet18_batch256_imagenet_20200708-34ab8f90.pth 

backbone.layer1.1.bn2.weight - torch.Size([64]): 
PretrainedInit: load from C:/Users/crz/mmclassification/checkpoints/resnet18_batch256_imagenet_20200708-34ab8f90.pth 

backbone.layer1.1.bn2.bias - torch.Size([64]): 
PretrainedInit: load from C:/Users/crz/mmclassification/checkpoints/resnet18_batch256_imagenet_20200708-34ab8f90.pth 

backbone.layer2.0.conv1.weight - torch.Size([128, 64, 3, 3]): 
PretrainedInit: load from C:/Users/crz/mmclassification/checkpoints/resnet18_batch256_imagenet_20200708-34ab8f90.pth 

backbone.layer2.0.bn1.weight - torch.Size([128]): 
PretrainedInit: load from C:/Users/crz/mmclassification/checkpoints/resnet18_batch256_imagenet_20200708-34ab8f90.pth 

backbone.layer2.0.bn1.bias - torch.Size([128]): 
PretrainedInit: load from C:/Users/crz/mmclassification/checkpoints/resnet18_batch256_imagenet_20200708-34ab8f90.pth 

backbone.layer2.0.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from C:/Users/crz/mmclassification/checkpoints/resnet18_batch256_imagenet_20200708-34ab8f90.pth 

backbone.layer2.0.bn2.weight - torch.Size([128]): 
PretrainedInit: load from C:/Users/crz/mmclassification/checkpoints/resnet18_batch256_imagenet_20200708-34ab8f90.pth 

backbone.layer2.0.bn2.bias - torch.Size([128]): 
PretrainedInit: load from C:/Users/crz/mmclassification/checkpoints/resnet18_batch256_imagenet_20200708-34ab8f90.pth 

backbone.layer2.0.downsample.0.weight - torch.Size([128, 64, 1, 1]): 
PretrainedInit: load from C:/Users/crz/mmclassification/checkpoints/resnet18_batch256_imagenet_20200708-34ab8f90.pth 

backbone.layer2.0.downsample.1.weight - torch.Size([128]): 
PretrainedInit: load from C:/Users/crz/mmclassification/checkpoints/resnet18_batch256_imagenet_20200708-34ab8f90.pth 

backbone.layer2.0.downsample.1.bias - torch.Size([128]): 
PretrainedInit: load from C:/Users/crz/mmclassification/checkpoints/resnet18_batch256_imagenet_20200708-34ab8f90.pth 

backbone.layer2.1.conv1.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from C:/Users/crz/mmclassification/checkpoints/resnet18_batch256_imagenet_20200708-34ab8f90.pth 

backbone.layer2.1.bn1.weight - torch.Size([128]): 
PretrainedInit: load from C:/Users/crz/mmclassification/checkpoints/resnet18_batch256_imagenet_20200708-34ab8f90.pth 

backbone.layer2.1.bn1.bias - torch.Size([128]): 
PretrainedInit: load from C:/Users/crz/mmclassification/checkpoints/resnet18_batch256_imagenet_20200708-34ab8f90.pth 

backbone.layer2.1.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from C:/Users/crz/mmclassification/checkpoints/resnet18_batch256_imagenet_20200708-34ab8f90.pth 

backbone.layer2.1.bn2.weight - torch.Size([128]): 
PretrainedInit: load from C:/Users/crz/mmclassification/checkpoints/resnet18_batch256_imagenet_20200708-34ab8f90.pth 

backbone.layer2.1.bn2.bias - torch.Size([128]): 
PretrainedInit: load from C:/Users/crz/mmclassification/checkpoints/resnet18_batch256_imagenet_20200708-34ab8f90.pth 

backbone.layer3.0.conv1.weight - torch.Size([256, 128, 3, 3]): 
PretrainedInit: load from C:/Users/crz/mmclassification/checkpoints/resnet18_batch256_imagenet_20200708-34ab8f90.pth 

backbone.layer3.0.bn1.weight - torch.Size([256]): 
PretrainedInit: load from C:/Users/crz/mmclassification/checkpoints/resnet18_batch256_imagenet_20200708-34ab8f90.pth 

backbone.layer3.0.bn1.bias - torch.Size([256]): 
PretrainedInit: load from C:/Users/crz/mmclassification/checkpoints/resnet18_batch256_imagenet_20200708-34ab8f90.pth 

backbone.layer3.0.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from C:/Users/crz/mmclassification/checkpoints/resnet18_batch256_imagenet_20200708-34ab8f90.pth 

backbone.layer3.0.bn2.weight - torch.Size([256]): 
PretrainedInit: load from C:/Users/crz/mmclassification/checkpoints/resnet18_batch256_imagenet_20200708-34ab8f90.pth 

backbone.layer3.0.bn2.bias - torch.Size([256]): 
PretrainedInit: load from C:/Users/crz/mmclassification/checkpoints/resnet18_batch256_imagenet_20200708-34ab8f90.pth 

backbone.layer3.0.downsample.0.weight - torch.Size([256, 128, 1, 1]): 
PretrainedInit: load from C:/Users/crz/mmclassification/checkpoints/resnet18_batch256_imagenet_20200708-34ab8f90.pth 

backbone.layer3.0.downsample.1.weight - torch.Size([256]): 
PretrainedInit: load from C:/Users/crz/mmclassification/checkpoints/resnet18_batch256_imagenet_20200708-34ab8f90.pth 

backbone.layer3.0.downsample.1.bias - torch.Size([256]): 
PretrainedInit: load from C:/Users/crz/mmclassification/checkpoints/resnet18_batch256_imagenet_20200708-34ab8f90.pth 

backbone.layer3.1.conv1.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from C:/Users/crz/mmclassification/checkpoints/resnet18_batch256_imagenet_20200708-34ab8f90.pth 

backbone.layer3.1.bn1.weight - torch.Size([256]): 
PretrainedInit: load from C:/Users/crz/mmclassification/checkpoints/resnet18_batch256_imagenet_20200708-34ab8f90.pth 

backbone.layer3.1.bn1.bias - torch.Size([256]): 
PretrainedInit: load from C:/Users/crz/mmclassification/checkpoints/resnet18_batch256_imagenet_20200708-34ab8f90.pth 

backbone.layer3.1.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from C:/Users/crz/mmclassification/checkpoints/resnet18_batch256_imagenet_20200708-34ab8f90.pth 

backbone.layer3.1.bn2.weight - torch.Size([256]): 
PretrainedInit: load from C:/Users/crz/mmclassification/checkpoints/resnet18_batch256_imagenet_20200708-34ab8f90.pth 

backbone.layer3.1.bn2.bias - torch.Size([256]): 
PretrainedInit: load from C:/Users/crz/mmclassification/checkpoints/resnet18_batch256_imagenet_20200708-34ab8f90.pth 

backbone.layer4.0.conv1.weight - torch.Size([512, 256, 3, 3]): 
PretrainedInit: load from C:/Users/crz/mmclassification/checkpoints/resnet18_batch256_imagenet_20200708-34ab8f90.pth 

backbone.layer4.0.bn1.weight - torch.Size([512]): 
PretrainedInit: load from C:/Users/crz/mmclassification/checkpoints/resnet18_batch256_imagenet_20200708-34ab8f90.pth 

backbone.layer4.0.bn1.bias - torch.Size([512]): 
PretrainedInit: load from C:/Users/crz/mmclassification/checkpoints/resnet18_batch256_imagenet_20200708-34ab8f90.pth 

backbone.layer4.0.conv2.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from C:/Users/crz/mmclassification/checkpoints/resnet18_batch256_imagenet_20200708-34ab8f90.pth 

backbone.layer4.0.bn2.weight - torch.Size([512]): 
PretrainedInit: load from C:/Users/crz/mmclassification/checkpoints/resnet18_batch256_imagenet_20200708-34ab8f90.pth 

backbone.layer4.0.bn2.bias - torch.Size([512]): 
PretrainedInit: load from C:/Users/crz/mmclassification/checkpoints/resnet18_batch256_imagenet_20200708-34ab8f90.pth 

backbone.layer4.0.downsample.0.weight - torch.Size([512, 256, 1, 1]): 
PretrainedInit: load from C:/Users/crz/mmclassification/checkpoints/resnet18_batch256_imagenet_20200708-34ab8f90.pth 

backbone.layer4.0.downsample.1.weight - torch.Size([512]): 
PretrainedInit: load from C:/Users/crz/mmclassification/checkpoints/resnet18_batch256_imagenet_20200708-34ab8f90.pth 

backbone.layer4.0.downsample.1.bias - torch.Size([512]): 
PretrainedInit: load from C:/Users/crz/mmclassification/checkpoints/resnet18_batch256_imagenet_20200708-34ab8f90.pth 

backbone.layer4.1.conv1.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from C:/Users/crz/mmclassification/checkpoints/resnet18_batch256_imagenet_20200708-34ab8f90.pth 

backbone.layer4.1.bn1.weight - torch.Size([512]): 
PretrainedInit: load from C:/Users/crz/mmclassification/checkpoints/resnet18_batch256_imagenet_20200708-34ab8f90.pth 

backbone.layer4.1.bn1.bias - torch.Size([512]): 
PretrainedInit: load from C:/Users/crz/mmclassification/checkpoints/resnet18_batch256_imagenet_20200708-34ab8f90.pth 

backbone.layer4.1.conv2.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from C:/Users/crz/mmclassification/checkpoints/resnet18_batch256_imagenet_20200708-34ab8f90.pth 

backbone.layer4.1.bn2.weight - torch.Size([512]): 
PretrainedInit: load from C:/Users/crz/mmclassification/checkpoints/resnet18_batch256_imagenet_20200708-34ab8f90.pth 

backbone.layer4.1.bn2.bias - torch.Size([512]): 
PretrainedInit: load from C:/Users/crz/mmclassification/checkpoints/resnet18_batch256_imagenet_20200708-34ab8f90.pth 

head.fc.weight - torch.Size([5, 512]): 
NormalInit: mean=0, std=0.01, bias=0 

head.fc.bias - torch.Size([5]): 
NormalInit: mean=0, std=0.01, bias=0 
